# -*- coding: utf-8 -*-
"""webscrapping.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X7w9iTrocZOVzfr-815ARgr2InqMh1fB

# importing libraries
"""

import requests
from bs4 import BeautifulSoup
import pandas as pd
import numpy as np

def get_title(soup):
    try:
        product_title = single_product_soup.find("span", attrs={'id': 'productTitle'}).text.strip()
    except AttributeError:
       product_title = ""
    return product_title

def get_price(soup):
    try:
       product_price = single_product_soup.find("span", attrs={'class':  'a-offscreen'}).text
    except AttributeError:
       product_price = ""
    return product_price

HEADERS = ({'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36'})
URL = 'https://www.amazon.in/s?k=airpods'
page = requests.get(URL, headers = HEADERS)
page

soup = BeautifulSoup(page.content, 'html.parser')
soup

links = soup.find_all("a", attrs={'class':'a-link-normal s-underline-text s-underline-link-text s-link-style a-text-normal'})
links_list = []
for link in links:
    # Check if the link already starts with "https://"
    # If not, prepend "https://www.amazon.in", otherwise keep it as it is
    if not link.get("href").startswith("https://"):
        links_list.append("https://www.amazon.in"  +  link.get("href"))
    else:
        links_list.append(link.get("href"))
links_list

d = {"title":[], "price":[]}
for link in links_list:
    product_page = requests.get(link, headers = HEADERS)
    single_product_soup = BeautifulSoup(product_page.content, 'html.parser')
    d['title'].append(get_title(single_product_soup))
    d['price'].append(get_price(single_product_soup))
d

product_page = requests.get(link, headers = HEADERS)

single_product_soup = BeautifulSoup(product_page.content, 'html.parser')
single_product_soup

product_title = single_product_soup.find("span", attrs={'id': 'productTitle'}).text.strip()
print(product_title)
product_price = single_product_soup.find("span", attrs={'class':  'a-offscreen'}).text
print(product_price)

amazon_data_frame = pd.DataFrame.from_dict(d)
amazon_data_frame['title'].replace('', np.nan, inplace=True)
amazon_data_frame = amazon_data_frame.dropna(subset=['title'])
amazon_data_frame.to_csv("amazon_data.csv", header=True, index=False)

amazon_data_frame